@page "/fetchblock"
@page "/fetchblock/{blockindex:long}"
@page "/fetchblock/{blockhash}"
@inject HttpClient Http
@inject IUriHelper UriHelper
@inject GlobalData globalData

<h1>Block Info</h1>

<p>This component shows information about a block.</p>

@if (block == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th>Item</th>
                <th>Info</th>
            </tr>
        </thead>
        <tbody>
            <tr><td>BlockHash</td><td>@block.BlockHash</td></tr>
            <tr><td>BlockIndex</td><td>@block.BlockIndex</td></tr>
            <tr><td>BlockTime</td><td>@block.BlockTime</td></tr>
            <tr><td>TransactionCount</td><td>@block.TransactionCount</td></tr>
            <tr><td>Version</td><td>@block.Version</td></tr>
            <tr><td>PreviousBlockHash</td><td style="cursor: pointer;" class="btn btn-link" @onclick="@(() => NavigateToBlockHash(block.PreviousBlockHash))" >@block.PreviousBlockHash</td></tr>
            <tr><td>NextBlockHash</td><td style="cursor: pointer;" class="btn btn-link" @onclick="@(() => NavigateToBlockHash(block.NextBlockHash))">@block.NextBlockHash</td></tr>
            <tr><td>Merkleroot</td><td>@block.Merkleroot</td></tr>
            <tr><td>Nonce</td><td>@block.Nonce</td></tr>
            <tr><td>BlockSize</td><td>@block.BlockSize</td></tr>
            @*
                <tr><td>Confirmations</td><td>@block.Confirmations</td></tr>
                <tr><td>PosModifierv2</td><td>@block.PosModifierv2</td></tr>
                <tr><td>PosChainTrust</td><td>@block.PosChainTrust</td></tr>
                <tr><td>PosBlockTrust</td><td>@block.PosBlockTrust</td></tr>
                <tr><td>PosFlags</td><td>@block.PosFlags</td></tr>
            *@
        </tbody>
    </table>

    <table class="table _table-hover table-sm">
        <thead>
            <tr>
                <th>Transaction</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in block.Transactions)
            {
                <tr>
                    <td style="cursor: pointer;" class="btn btn-link" @onclick="@(() => NavigateToTransactionkIndex(transaction))">@transaction</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    private long blockindex { get; set; } = -1;

    [Parameter]
    private string blockhash { get; set; }

    DataTypes.QueryBlock block;

    private void NavigateToTransactionkIndex(string trxHash)
    {
        UriHelper.NavigateTo($"FetchTransaction/{trxHash}");
    }

    private void NavigateToBlockHash(string hash)
    {
        UriHelper.NavigateTo($"fetchblock/{hash}");
    }

    protected override async Task OnInitAsync()
    {
        if (this.blockindex == -1)
        {
            block = await Http.GetJsonAsync<DataTypes.QueryBlock>("http://localhost:9000/api/Query/block/Latest/1?api-version=1.0");
            return;
        }

        if(!string.IsNullOrEmpty(this.blockhash))
        {
            block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://localhost:9000/api/Query/block/{this.blockhash}/1?api-version=1.0");
            return;
        }

        if (!this.globalData.BlocksCache.TryGetValue(this.blockindex, out block))
        {
            block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://localhost:9000/api/Query/block/Index/{this.blockindex}/1?api-version=1.0");
        }
    }
}
