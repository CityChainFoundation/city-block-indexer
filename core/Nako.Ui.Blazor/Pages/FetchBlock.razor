@page "/fetchblock"
@page "/fetchblock/{blockindex:int}"
@inject HttpClient Http

<h1>Block Info</h1>

<p>This component shows information about a block.</p>

@if (block == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th>Item</th>
                <th>Info</th>
            </tr>
        </thead>
        <tbody>
            <tr><td>BlockHash</td><td>@block.BlockHash</td></tr>
            <tr><td>BlockIndex</td><td>@block.BlockIndex</td></tr>
            <tr><td>BlockTime</td><td>@block.BlockTime</td></tr>
            <tr><td>TransactionCount</td><td>@block.TransactionCount</td></tr>
            <tr><td>Version</td><td>@block.Version</td></tr>
            <tr><td>PreviousBlockHash</td><td>@block.PreviousBlockHash</td></tr>
            <tr><td>NextBlockHash</td><td>@block.NextBlockHash</td></tr>
            <tr><td>Merkleroot</td><td>@block.Merkleroot</td></tr>
            <tr><td>Nonce</td><td>@block.Nonce</td></tr>
            <tr><td>BlockSize</td><td>@block.BlockSize</td></tr>
            @*
            <tr><td>Confirmations</td><td>@block.Confirmations</td></tr>
            <tr><td>PosModifierv2</td><td>@block.PosModifierv2</td></tr>
            <tr><td>PosChainTrust</td><td>@block.PosChainTrust</td></tr>
            <tr><td>PosBlockTrust</td><td>@block.PosBlockTrust</td></tr>
            <tr><td>PosFlags</td><td>@block.PosFlags</td></tr>
            *@
        </tbody>
    </table>

    <table class="table _table-hover table-sm">
        <thead>
            <tr>
                <th>Transaction</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in block.Transactions)
            {
                <tr>
                    <td style="cursor: pointer;" class="btn btn-link" @onclick="@(() => NavigateToTransactionkIndex(transaction))">@transaction</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    private int blockindex { get; set; } = -1;

    private void NavigateToTransactionkIndex(string trxHash)
    {
       // UriHelper.NavigateTo("fetchblock/" + index);
    }

    QueryBlock block;

    protected override async Task OnInitAsync()
    {
        if (this.blockindex == -1)
        {
            block = await Http.GetJsonAsync<QueryBlock>("http://localhost:9000/api/Query/block/Latest/1?api-version=1.0");
            return;
        }

        block = await Http.GetJsonAsync<QueryBlock>("http://localhost:9000/api/Query/block/Index/" + this.blockindex + "/1?api-version=1.0");
    }

    public class QueryBlock
    {
        public string CoinTag { get; set; }
        public string BlockHash { get; set; }
        public long BlockIndex { get; set; }
        public long BlockSize { get; set; }
        public long BlockTime { get; set; }
        public string NextBlockHash { get; set; }
        public string PreviousBlockHash { get; set; }
        public bool Synced { get; set; }
        public int TransactionCount { get; set; }
        public long Confirmations { get; set; }
        public string Bits { get; set; }
        public string Merkleroot { get; set; }
        public long Nonce { get; set; }
        public long Version { get; set; }
        public string PosBlockSignature { get; set; }
        public string PosModifierv2 { get; set; }
        public string PosFlags { get; set; }
        public string PosHashProof { get; set; }
        public string PosBlockTrust { get; set; }
        public string PosChainTrust { get; set; }
        public IEnumerable<string> Transactions { get; set; }
    }
}
